<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
       xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
       http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<configuration defaultSynchronousEndpoints="true" defaultResponseTimeout="30000"/>
	
	<context:property-placeholder location="discoveryenvironment.properties" />
	
	<spring:beans xmlns="http://www.springframework.org/schema/beans">
	
		<bean name="fileUploadedEvent"
			class="org.iplantc.jlrproxytoolkit.factorybean.JLRProxyFactoryBean">
			<property name="interfaces">
				<list><value>org.iplantc.iptol.FileUploadedEvent</value></list>
			</property>
			<property name="invocationHandler">
				<bean class="org.iplantc.jlrproxytoolkit.invocationhandler.SendViaMule">
					<property name="endpoint" value="vm://importfile" />
					<property name="synchronous" value="false" />
				</bean>
			</property>
		</bean>
	
		<bean name="extractNexusFileService"
			class="org.iplantc.importfile.newick.ExtractJeblTrees">
			<property name="importerFactory">
				<bean class="org.iplantc.importfile.util.NexusTreeImporterFactory" />
			</property>
		</bean>
	
		<bean name="extractNewickFileService"
			class="org.iplantc.importfile.newick.ExtractJeblTrees">
			<property name="importerFactory">
				<bean class="org.iplantc.importfile.util.NewickTreeImporterFactory" />
			</property>
		</bean>
	
		<bean name="transformJeblModel"
			class="org.iplantc.importfile.jebl.JeblCdaoTransformer" />
		
		<bean name="persistTreeModel"
			class="org.iplantc.importfile.treedata.PersistTreeData">
			<property name="sessionFactory" ref="sessionFactory" />
		</bean>
	
		<bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<property name="driverClassName" value="org.postgresql.Driver" />
			<property name="url" value="jdbc:postgresql://${org.iplantc.discoveryenvironment.database.host}:${org.iplantc.discoveryenvironment.database.port}/${org.iplantc.discoveryenvironment.database.database}" />
			<property name="username" value="${org.iplantc.discoveryenvironment.database.user}" />
			<property name="password" value="${org.iplantc.discoveryenvironment.database.password}" />
		</bean>
	
		<bean name="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="mappingResources">
				<list>
					<value>database.hbm.xml</value>
				</list>
			</property>
			<property name="hibernateProperties">
				<value>
					hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
					hibernate.hbm2ddl.auto=update
				</value>
			</property>
		</bean>
	
	</spring:beans>
	
	<model>
		<service name="ImportFile">
			<inbound>
				<vm:inbound-endpoint path="importfile" synchronous="false" />
				<forwarding-router />
			</inbound>
			<outbound>
				<chaining-router>
					<vm:outbound-endpoint path="extractfile" />
					<vm:outbound-endpoint path="transformjeblmodel" />
					<vm:outbound-endpoint path="persisttreemodel" />
				</chaining-router>
			</outbound>
		</service>
		
		<service name="ExtractFile">
			<inbound>
				<vm:inbound-endpoint path="extractfile" synchronous="true" />
				<forwarding-router />
			</inbound>
			<outbound>
				<exception-based-router>
					<vm:outbound-endpoint path="extractnexusfile" />
					<vm:outbound-endpoint path="extractnewickfile" />
				</exception-based-router>
			</outbound>
		</service>
		
		<service name="ExtractNexusFile">
			<inbound>
				<vm:inbound-endpoint path="extractnexusfile" synchronous="true" />
			</inbound>
			<component>
				<spring-object bean="extractNexusFileService" />
			</component>
		</service>

		<service name="ExtractNewickFile">
			<inbound>
				<vm:inbound-endpoint path="extractnewickfile" synchronous="true" />
			</inbound>
			<component>
				<spring-object bean="extractNewickFileService" />
			</component>
		</service>

		<service name="TransformJeblModel">
			<inbound>
				<vm:inbound-endpoint path="transformjeblmodel" synchronous="true" />
			</inbound>
			<component>
				<spring-object bean="transformJeblModel" />
			</component>
		</service>

		<service name="PersistTreeModel">
			<inbound>
				<vm:inbound-endpoint path="persisttreemodel" synchronous="true" />
			</inbound>
			<component>
				<spring-object bean="persistTreeModel" />
			</component>
		</service>
	</model>
	
</mule>
