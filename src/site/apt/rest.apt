Guide to Discovery Environment RESTful services

  The backend services for the discovery environment are provided using RESTful
services, and provide the following endpoints:

* User Session services

** Login

*-------------+-----------------+
 Description  | Login to the system.
*-------------+-----------------+
 URL         | http://de.host:14444/login
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A JSON string containing the user's userId and password.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | An authentication token (string).
*-------------+-----------------+

* User services

** Get User Info

*-------------+-----------------+
 Description  | Get the User's info.
*-------------+-----------------+
 URL         | http://de.host:14444/users/\{userId\}
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | The user's info, e.g. the user's workspace id.
*-------------+-----------------+

* Tree service

** Get Trees

*-------------+-----------------+
 Description  | Retrieve trees in a workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/\{workspaceId\}/trees
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A list of trees in JSON format.  The trees do not contain the full tree, just the name, id, etc.
*-------------+-----------------+

** Get File Trees

*-------------+-----------------+
 Description  | Retrieve trees belonging to a specific file.
*-------------+-----------------+
 URL         | http://de.host:14444/file/\{fileId\}/trees
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A list of trees in JSON format.  The trees do not contain the full tree, just the name, id, etc.
*-------------+-----------------+

** Get Tree

*-------------+-----------------+
 Description  | Retrieve a single tree.
*-------------+-----------------+
 URL         | http://de.host:14444/trees/\{treeId\}
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A tree in JSON format with the entire tree content.
*-------------+-----------------+

** Get Species from Trees

*-------------+-----------------+
 Description  | Retrieve species from a set of trees
*-------------+-----------------+
 URL         | http://de.host:14444/trees/taxa
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A JSON object of the form: \{"ids": ["id1", "id2",...]\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON object containing a list of species in the trees specified in the form: \{species : [\{"id":"id1", "name": "name1"\}, \{"id": "id2", "name": "name2"\}, ...]\}
*-------------+-----------------+

** Change Tree Label

*-------------+-----------------+
 Description  | Changes the label of a tree.
*-------------+-----------------+
 URL         | http://de.host:14444/trees/\{treeId\}/label
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | What to change the label of the tree to (raw, not JSON)
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

* Workspace Services

** Upload Data File to Default Upload Folder

*-------------+-----------------+
 Description  | Upload a data file into the user's workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/files
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A multi-part body containing the file to upload.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing information about the new file.
*-------------+-----------------+

** Upload Data File to a specific Folder

*-------------+-----------------+
 Description  | Upload a data file into a specific folder in the user's workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}/files
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A multi-part body containing the file to upload.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing information about the new file.
*-------------+-----------------+


* Folder Services

** Create Folder

*-------------+-----------------+
 Description  | Given a folder within a workspace, create a new child folder with a given label.  It is an error to create two folders with the same label in the same parent folder. |
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}/folders 
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A JSON string containing the label for the new folder, e.g. \{"label":"foo"\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the ID of the new folder, e.g. \{"id":8\} 
*-------------+-----------------+

** Delete Folder

*-------------+-----------------+
 Description     | Delete the specified folder and the files within that folder.  The special home folder cannot be deleted.  Also, if the user attempts to delete the upload folder, its contents will be deleted, but the folder will not be deleted.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}
*-------------+-----------------+
 Method      | DELETE             
*-------------+-----------------+
 Request Body | None           
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

** Rename Folder

*-------------+-----------------+
 Description     | Renames the specified folder within the given workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}
*-------------+-----------------+
 Method      | PUT
*-------------+-----------------+
 Request Body | A JSON string containing the new label for the folder, e.g. \{"label":"foo"\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

** Move File

*-------------+-----------------+
 Description     | Moves a file from one folder to another.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/files/\{fileId\}/parentFolder
*-------------+-----------------+
 Method      | PUT
*-------------+-----------------+
 Request Body | A JSON string containing the ID of the new parent folder, e.g. \{"id":8\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

** Delete Resources

*-------------+-----------------+
 Description     | Delete one or more resources, files and folders.  If a folder is specified, all of its files are also deleted.  If the upload folder is specified, its contents are deleted, but the folder will not be deleted.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/resources?method=multiDelete
*-------------+-----------------+
 Method      | POST
*-------------+-----------------+
 Request Body | A JSON string containing the lists of file and folder IDs to delete.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None or a JSON string containing an exception.
*-------------+-----------------+

* File Services

** Get Files

*-------------+-----------------+
 Description     | Gets the list of files in a workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/\{workspaceId\}/files
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing a list of files.
*-------------+-----------------+

** Get Provenance Text All

*-------------+-----------------+
 Description     | Gets all Provenance text for a Data File.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}/provenance.text.all
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing a list of text strings.
*-------------+-----------------+

** Get Provenance Text Comments

*-------------+-----------------+
 Description     | Gets the Provenance comments for a Data File.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}/provenance.text.comments
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing a list of text strings.
*-------------+-----------------+

** Delete File

*-------------+-----------------+
 Description     | Delete a file.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}
*-------------+-----------------+
 Method      | DELETE
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None or a JSON string containing an exception.
*-------------+-----------------+

** Export NEXUS File

*-------------+-----------------+
 Description     | Exports a file in NEXUS format.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}/content
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A NEXUS file containing the data retrieved from the database for that file.  Headers are set on the response to indicate to the browser that it should be downloaded, not displayed.
*-------------+-----------------+

* Matrix Services

** Get Matrices

*-------------+-----------------+
 Description     | Gets general information about each matrix (trait table) in a workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/matrices
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the list of matrices.  For each matrix, it's filename and matrix ID are returned along with when the file was uploaded.
*-------------+-----------------+

** Get File Matrices

*-------------+-----------------+
 Description     | Gets general information about each matrix (trait table) in a file.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}/matrices
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the list of matrices.  For each matrix, it's filename and matrix ID are returned along with when the file was uploaded.
*-------------+-----------------+

** Get Matrix

*-------------+-----------------+
 Description     | Gets all of the data for a single matrix (trait table).
*-------------+-----------------+
 URL         | http://de.host:14444/matrices/\{matrixId\}
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing all of the data for a single matrix.
*-------------+-----------------+

** Get Species from Matrix

*-------------+-----------------+
 Description  | Retrieve species from a matrix
*-------------+-----------------+
 URL         | http://de.host:14444/matrices/\{matrixId\}/taxa
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON object containing a list of species in the matrix specified in the form: \{species : [\{"id":"id1", "name": "name1"\}, \{"id": "id2", "name": "name2"\}, ...]\}
*-------------+-----------------+

** Set Matrix

*-------------+-----------------+
 Description     | Sets all of the data for a single matrix (trait table).
*-------------+-----------------+
 URL         | http://de.host:14444/matrices/\{matrixId\}
*-------------+-----------------+
 Method      | PUT
*-------------+-----------------+
 Request Body | A JSON string containing all of the data for a single matrix.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None or a encoded exception if an error occurs.
*-------------+-----------------+

* Job services

** Get Jobs

*-------------+-----------------+
 Description  | Get the list of jobs for the current user.
*-------------+-----------------+
 URL         | http://de.host:14444/jobs
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the list of jobs.
*-------------+-----------------+

** Get Job

*-------------+-----------------+
 Description  | Get a specific job.
*-------------+-----------------+
 URL         | http://de.host:14444/jobs/\{jobId\}
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the job or JobNotFoundException.
*-------------+-----------------+

** Stop Job

*-------------+-----------------+
 Description  | Stop a specific job.  Does not remove it from the user's list.
*-------------+-----------------+
 URL         | http://de.host:14444/jobs/\{jobId\}?method=stop
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None or JobNotFoundException.
*-------------+-----------------+

** Remove Job

*-------------+-----------------+
 Description  | Removes a specific job from the user's list.
*-------------+-----------------+
 URL         | http://de.host:14444/jobs/\{jobId\}
*-------------+-----------------+
 Method      | DELETE             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None or JobNotFoundException.
*-------------+-----------------+

