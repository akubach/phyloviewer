Guide to Discovery Environment RESTful services

  The backend services for the discovery environment are provided using RESTful
services, and provide the following endpoints:

* User Session services

** Login

*-------------+-----------------+
 Description  | Login to the system.
*-------------+-----------------+
 URL         | http://de.host:14444/login
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A JSON string containing the user's userId and password.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | An authentication token (string).
*-------------+-----------------+

* User services

** Get User Info

*-------------+-----------------+
 Description  | Get the User's info.
*-------------+-----------------+
 URL         | http://de.host:14444/users/\{userId\}
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | The user's info, e.g. the user's workspace id.
*-------------+-----------------+

* Tree service

** Get Trees

*-------------+-----------------+
 Description  | Retrieve trees.
*-------------+-----------------+
 URL         | http://de.host:14444/trees
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A list of trees in JSON format.  The trees do not contain the full tree, just the name, id, etc.
*-------------+-----------------+

** Get Tree

*-------------+-----------------+
 Description  | Retrieve a single tree.
*-------------+-----------------+
 URL         | http://de.host:14444/trees/\{treeId\}
*-------------+-----------------+
 Method      | GET             
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A tree in JSON format with the entire tree content.
*-------------+-----------------+

** Change Tree Label

*-------------+-----------------+
 Description  | Changes the label of a tree.
*-------------+-----------------+
 URL         | http://de.host:14444/trees/\{treeId\}/label
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | What to change the label of the tree to (raw, not JSON)
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

* Workspace Services

** Upload Data File

*-------------+-----------------+
 Description  | Upload a data file into the user's workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/files
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A JSON string containing the file's name and the file's contents.  A folderId can also be specified indicating where the place the uploaded file.  If the folderId is not specified, the default upload folder is used.
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing information about the new file.
*-------------+-----------------+


* Folder Services

** Create Folder

*-------------+-----------------+
 Description  | Given a folder within a workspace, create a new child folder with a given label.  It is an error to create two folders with the same label in the same parent folder. |
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}/folders 
*-------------+-----------------+
 Method      | POST             
*-------------+-----------------+
 Request Body | A JSON string containing the label for the new folder, e.g. \{"label":"foo"\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the ID of the new folder, e.g. \{"id":8\} 
*-------------+-----------------+

** Delete Folder

*-------------+-----------------+
 Description     | Delete the specified folder within a given workspace.  The special root and download folders cannot be deleted.  Non-empty folders cannot be deleted.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}
*-------------+-----------------+
 Method      | DELETE             
*-------------+-----------------+
 Request Body | None           
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

** Rename Folder

*-------------+-----------------+
 Description     | Renames the specified folder within the given workspace.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/folders/\{folderId\}
*-------------+-----------------+
 Method      | PUT
*-------------+-----------------+
 Request Body | A JSON string containing the new label for the folder, e.g. \{"label":"foo"\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

** Move File

*-------------+-----------------+
 Description     | Moves a file from one folder to another.
*-------------+-----------------+
 URL         | http://de.host:14444/workspaces/\{workspaceId\}/files/\{fileId\}/parentFolder
*-------------+-----------------+
 Method      | PUT
*-------------+-----------------+
 Request Body | A JSON string containing the ID of the new parent folder, e.g. \{"id":8\}
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

* File Services

** Get Provenance

*-------------+-----------------+
 Description     | Gets the Provenance for a Data File.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}/provenance
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing a list of text strings.
*-------------+-----------------+

** Delete File

*-------------+-----------------+
 Description     | Delete a file.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}
*-------------+-----------------+
 Method      | DELETE
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | None
*-------------+-----------------+

** Export NEXUS File

*-------------+-----------------+
 Description     | Exports a file in NEXUS format.
*-------------+-----------------+
 URL         | http://de.host:14444/files/\{fileId\}/content
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A NEXUS file containing the data retrieved from the database for that file.  Headers are set on the response to indicate to the browser that it should be downloaded, not displayed.
*-------------+-----------------+

* Matrix Services

** Get Matrices

*-------------+-----------------+
 Description     | Gets general information about each matrix (trait table).
*-------------+-----------------+
 URL         | http://de.host:14444/matrices
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing the list of matrices.  For each matrix, it's filename and matrix ID are returned along with when the file was uploaded.
*-------------+-----------------+

** Get Matrix

*-------------+-----------------+
 Description     | Gets all of the data for a single matrix (trait table).
*-------------+-----------------+
 URL         | http://de.host:14444/matrices/\{matrixId\}
*-------------+-----------------+
 Method      | GET
*-------------+-----------------+
 Request Body | None
*-------------+-----------------+
 Response Status Code     | 200 (OK), 500 (Error) 
*-------------+-----------------+
 Response Body | A JSON string containing all of the data for a single matrix.
*-------------+-----------------+

